
Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

JSON

 4. Создать внешний репозиторий c названием JSON

 5. Клонировать репозиторий JSON на локальный компьютер: 	git clone https://github.com/Kokain129/JSON.git

 6. Внутри локального JSON создать файл “new.json”: 	touch new.json

 7. Добавить файл под гит: 	git add new.json

 8. Закоммитить файл: 	git commit -m "new json file is to be commited"

 9. Отправить файл на внешний GitHub репозиторий: 	git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: 

vim new.json

{	
	"name":"Andromeda Galaz",
	"age":129,
	"animals q-ty":0,
	"desired salary": 10000
}

 11. Отправить изменения на внешний репозиторий: 	git commit -am "updates for newfile" => git push

 12. Создать файл preferences.json: 	vim preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON:

{
	"movie":"Lord of the rings",
	"series":"Over the Garden Wall",
	"food":"grilled",
	"season":"spring",
	"country":"China"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:

vim skills.json

{
	"Instrument skills":"Git, Terminal, JS, Postman, CharlesProxy",
	"QA Theory":"What's QA, Types of Software testing",
	"QA artifactes":"Check-lists, test-cases, bug reports, test plans"
}

 15. Отправить сразу 2 файла на внешний репозиторий: 	git add . => git commit -m "adding new files" => git push

 16. На веб интерфейсе создать файл bug_report.json: 	click the "Add file" > "Create New file" button 

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: 	click the "Commit new file" button

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON:
{
  "title":"Issue QA-1",
  "Summary":"The token is not accepted by GIT after providing it via Git Bash",
  "STR":"Step1, Step2, Step3",
  "ER":"The token is accepted after copy-pasting it from Git"
}


 19. Сделать Commit changes (сохранить) изменения на веб интерфейсe: 	click the "Commit new file" button

 20. Синхронизировать внешний и локальный репозиторий JSON: 	git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 3. Внутри локального TXT создать файл “new.txt”.
 4. Добавить файл под гит.
 5. Закоммитить файл.
 6. Отправить файл на внешний GitHub репозиторий.
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.
 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 12. Сделать коммит в одну строку.
 13. Отправить сразу 2 файла на внешний репозиторий.
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT


ssh-keygen -t rsa -C "githubuser”